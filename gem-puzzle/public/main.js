(()=>{"use strict";class t{constructor(){this.currentTime=0}calcCurrentTime(){this.time=setInterval((()=>{this.currentTime+=1,this.secToMinAndSec()}),1e3)}secToMinAndSec(){this.minutes=Math.floor(this.currentTime/60),this.sec=(this.currentTime%60).toFixed(0),this.timer=`${this.minutes}:${this.sec<10?"0":""}${this.sec}`,this.renderTimer()}timerStop(){clearInterval(this.time),this.timer="0:00",this.renderTimer()}timerPause(){clearInterval(this.time)}renderTimer(){document.querySelector(".time").innerHTML=this.timer}init(){this.timerStop(),this.currentTime=null,this.calcCurrentTime()}load(){this.timerStop(),this.secToMinAndSec(),this.renderTimer(),this.calcCurrentTime()}}const e=new class{constructor(){this.timerC=new t,this.history=[],this.size=4,this.emptyX=0,this.emptyY=0,this.animationTime=200,this.boardWidth=40.8,this.marginSize=.1,this.soundOn=!0,this.winSound=new Audio("../assets/win.mp3"),this.slideSound=new Audio("../assets/slide.mp3"),this.slideSound.volume=.2,this.removeBoard=()=>{document.querySelectorAll(".board").forEach((t=>{document.body.removeChild(t)}))},this.findElem=t=>{for(let e=0;e<this.arr.length;e+=1)for(let i=0;i<this.arr.length;i+=1)if(this.arr[e][i]===parseInt(t.innerHTML,10))return[e,i];throw new Error(t)},this.dragDrop=t=>{const e=t.target,i=document.querySelector(".hide"),[s,r]=this.findElem(i);this.isNearZero(s,r)&&([this.arr[s][r],this.arr[this.emptyX][this.emptyY]]=[this.arr[this.emptyX][this.emptyY],this.arr[s][r]],[this.emptyX,this.emptyY]=[s,r],[e.style.order,i.style.order]=[i.style.order,e.style.order]),e.classList.remove("hovered")}}randomImgNumber(t,e){this.imgNumb=Math.floor(Math.random()*(t-e)+e)}back(){this.history.pop(),this.backTimer()}isNearZero(t,e){return!!(Math.abs(this.emptyX-t)<=1&&this.emptyY-e==0||Math.abs(this.emptyY-e)<=1&&this.emptyX-t==0)}backTimer(){setTimeout((()=>{if(this.history.length){const[t,e]=this.history.pop();this.e=document.querySelector("#cell-"+this.arr[t][e]),this.moveAnimation([t,e]),setTimeout((()=>{const i=this.arr[this.emptyX][this.emptyY];this.arr[this.emptyX][this.emptyY]=this.arr[t][e],this.arr[t][e]=i,this.emptyX=t,this.emptyY=e,this.removeBoard(),this.renderBoard(),this.playSlideSound(),this.backTimer()}),this.animationTime)}else this.checkWin(!0)}),this.animationTime)}move(t){switch(t){case"up":0!==this.emptyX&&(this.history.length<=1||this.emptyX-1!==this.history[this.history.length-2][0])?(this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX-1][this.emptyY],this.arr[this.emptyX-1][this.emptyY]=0,this.emptyX-=1,this.history.push([this.emptyX,this.emptyY])):this.counter-=1;break;case"down":this.emptyX!==this.size-1&&(this.history.length<=1||this.emptyX+1!==this.history[this.history.length-2][0])?(this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX+1][this.emptyY],this.arr[this.emptyX+1][this.emptyY]=0,this.emptyX+=1,this.history.push([this.emptyX,this.emptyY])):this.counter-=1;break;case"right":this.emptyY!==this.size-1&&(this.history.length<=1||this.emptyY+1!==this.history[this.history.length-2][1])?(this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX][this.emptyY+1],this.arr[this.emptyX][this.emptyY+1]=0,this.emptyY+=1,this.history.push([this.emptyX,this.emptyY])):this.counter-=1;break;case"left":0!==this.emptyY&&(this.history.length<=1||this.emptyY-1!==this.history[this.history.length-2][1])?(this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX][this.emptyY-1],this.arr[this.emptyX][this.emptyY-1]=0,this.emptyY-=1,this.history.push([this.emptyX,this.emptyY])):this.counter-=1;break;default:throw new Error(">:(")}}createBoard(){const t=[];this.bgPosArr=[];for(let e=0;e<this.size;e+=1){t[e]=[];for(let i=0;i<this.size;i+=1)e+i!==2*(this.size-1)?(t[e][i]=e*this.size+i+1,this.bgPosArr.push(`${Math.round(100/(this.size-1)*i)}% ${Math.round(100/(this.size-1)*e)}%`)):t[e][i]=0}return t}shuffle(){for(this.history.push([this.emptyX,this.emptyY]),this.counter=0;this.counter<this.size**3;this.counter+=1)switch(Math.floor(4*Math.random())){case 0:this.move("up");break;case 1:this.move("right");break;case 2:this.move("down");break;case 3:this.move("left");break;default:throw new Error(">:(")}}renderBoard(){let t='<div class="score-list">test</div>';const e=this.boardWidth+"rem";let i;for(let s=0,r=1;s<this.size;s+=1)for(let n=0;n<this.size;n+=1){i=this.arr[s][n];const h=i?"cell":"cell empty",o=!!i,a=i?"":"ondragover = 'event.preventDefault()'",m=this.bgPosArr[i-1],d=i?`background: url(../assets/images/${this.imgNumb}.jpg); background-position: ${m}; background-size: ${e};`:"";r+=1,t+=`<div \n        ${a}\n          style='width:${this.cellSize}rem;\n          height:${this.cellSize}rem;\n          order:${r};\n          ${d}'\n          id='cell-${i}'\n          class='${h}'\n          draggable="${o}">${i}</div>`}const s=document.createElement("div");s.classList.add("board"),s.style.width=e,s.innerHTML=t,document.body.appendChild(s)}draw(){const t=this.cellSize/this.animationTime*this.timePassed;switch(this.direction){case"up":this.e.style.transform=`translate( 0, ${-t}rem)`;break;case"down":this.e.style.transform=`translate( 0, ${t}rem)`;break;case"left":this.e.style.transform=`translate( ${-t}rem, 0)`;break;case"right":this.e.style.transform=`translate( ${t}rem, 0)`;break;default:throw new Error(">:(")}}moveAnimation([t,e]){this.emptyX<t?this.direction="up":this.emptyX>t?this.direction="down":this.emptyY<e?this.direction="left":this.emptyY>e&&(this.direction="right"),this.inAnimation=!0,this.start=Date.now(),this.timer=setInterval((()=>{if(this.timePassed=Date.now()-this.start,this.timePassed>=this.animationTime)return clearInterval(this.timer),void(this.inAnimation=!1);this.draw()}),20)}toggleSound(){this.soundOn=!this.soundOn}swap(t){if(!this.inAnimation)for(let e=0;e<this.arr.length;e+=1)for(let i=0;i<this.arr[e].length;i+=1)if(this.arr[e][i]===t&&this.isNearZero(e,i)){this.movesCounter+=1,document.querySelector(".move").innerHTML=this.movesCounter;const t=document.querySelector("#cell-"+this.arr[this.emptyX][this.emptyY]);return this.e=document.querySelector("#cell-"+this.arr[e][i]),this.moveAnimation([e,i]),this.playSlideSound(),setTimeout((()=>{const e=t.style.order;t.style.order=this.e.style.order,this.e.style.order=e,this.e.style.transform="",this.emptyX===this.emptyY&&this.emptyY===this.size-1&&this.checkWin()&&this.timerC.timerPause()}),this.animationTime),[this.arr[e][i],this.arr[this.emptyX][this.emptyY]]=[this.arr[this.emptyX][this.emptyY],this.arr[e][i]],this.emptyX=e,this.emptyY=i,void this.history.push([this.emptyX,this.emptyY])}}setScore(){let t=JSON.parse(localStorage.getItem("score-list"))||[];t.push({moves:this.movesCounter,size:this.size,time:this.timerC.timer}),t.length>10&&(t.sort(((t,e)=>t.moves-e.moves)),t=t.slice(0,10)),localStorage.setItem("score-list",JSON.stringify(t))}getScoreList(){this.scoreList=!this.scoreList;const t=document.querySelector(".score-list"),e=JSON.parse(localStorage.getItem("score-list"))||[];let i="";for(let t=e.length-1;t>=0;t-=1)i+=`<li>Size: ${e[t].size},&nbsp;&nbsp;&nbsp;&nbsp;Moves: ${e[t].moves},&nbsp;&nbsp;&nbsp;&nbsp;Time: ${e[t].time}</li>`;t.innerHTML=`<h2>Best Scores</h2>\n      <ol class="score">${i}</ol>`,this.scoreList?(t.classList.add("score-list-on"),this.timerC.timerPause()):(t.classList.remove("score-list-on"),this.timerC.calcCurrentTime())}checkWin(t){for(let t=0;t<this.size;t+=1)for(let e=0;e<this.size;e+=1)if(t+e!==2*(this.size-1)&&this.win[t][e]!==this.arr[t][e])return!1;return this.playWinSound(),this.setWinMessage(t),this.setScore(),!0}setWinMessage(t){this.winBoard=document.querySelector(".board"),this.winBoard.classList.add("win"),this.winBoard.innerHTML+=`<div style="background-image: url(../assets/images/${this.imgNumb}.jpg);" class='win-text'>${t?"ЧИТЕР!":`Ура! Вы решили головоломку за ${document.querySelector(".time").innerHTML} и ${document.querySelector(".move").innerHTML} ходов</div>`}</div>`,setTimeout((()=>{this.winBoard.querySelector(".win-text").style.opacity=1}),50)}playWinSound(){this.soundOn&&(this.winSound.currentTime=0,this.winSound.play())}playSlideSound(){this.soundOn&&(this.slideSound.currentTime=0,this.slideSound.play())}dragStart(){setTimeout((()=>{this.classList.add("hide")}),0)}dragEnd(){this.classList.remove("hide")}dragEnter(){this.classList.add("hovered")}dragLeave(){this.classList.remove("hovered")}init(){this.scoreList=!1,this.randomImgNumber(150,1),this.history=[],this.movesCounter=0,document.querySelector(".move").innerHTML=this.movesCounter,this.size=document.getElementById("fieldSize").value,this.cellSize=parseFloat(this.boardWidth/this.size-2*this.marginSize).toFixed(3),this.removeBoard(),this.emptyX=this.size-1,this.emptyY=this.size-1,this.arr=this.createBoard(),this.win=this.createBoard(),this.shuffle(),this.renderBoard(),this.timerC.init(),document.querySelectorAll(".cell").forEach((t=>{t.addEventListener("mouseup",(t=>{const e=t.target;this.swap(parseInt(e.innerHTML,10))})),t.addEventListener("dragstart",this.dragStart),t.addEventListener("dragover",this.dragOver),t.addEventListener("drop",this.dragDrop),t.addEventListener("dragend",this.dragEnd),t.addEventListener("dragenter",this.dragEnter),t.addEventListener("dragleave",this.dragLeave)}))}load(){this.cellSize=parseFloat(this.boardWidth/this.size-2*this.marginSize).toFixed(3),document.querySelector(".move").innerHTML=this.movesCounter,this.removeBoard(),this.renderBoard(),this.win=this.createBoard(),this.timerC.init(),document.querySelectorAll(".cell").forEach((t=>{t.addEventListener("mouseup",(t=>{const e=t.target;this.swap(parseInt(e.innerHTML,10))})),t.addEventListener("dragstart",this.dragStart),t.addEventListener("dragover",this.dragOver),t.addEventListener("drop",this.dragDrop),t.addEventListener("dragend",this.dragEnd)}))}},i=document.createElement("header");i.classList.add("header"),i.innerHTML='<h1 class="heading">gem puzzle</h1>',document.body.appendChild(i);const s=document.createElement("div");s.classList.add("menu"),s.innerHTML=`  \n  <div class="settings">\n    <button class="new-game btn">New</button>\n    <button class="save btn">Save</button>\n    <button class="load btn">Load</button>\n    <button class="score btn">Score</button>\n    <button class="sound btn ${e.soundOn?"btn-on":""}">Sound</button>\n    <div class="size">\n      <select id="fieldSize">\n      <option selected="selected" value="4" disabled>Field size</option>\n        <option value="3">3</option>\n        <option value="4">4</option>\n        <option value="5">5</option>\n        <option value="6">6</option>\n        <option value="7">7</option>\n        <option value="8">8</option>\n      </select>\n    </div>\n    <button class="cheat btn">CHEAT</button>\n  </div>\n  <div class="counters">\n    <div class="timer"><span>Timer: </span><span class="time">0:00</span></div>\n    <div class="moves"><span>Moves: </span><span class="move">0</span></div>\n  </div>`,document.body.appendChild(s),e.init(),document.querySelector(".new-game").addEventListener("click",(()=>{e.init()})),document.querySelector(".save").addEventListener("click",(()=>{localStorage.setItem("gameSave",JSON.stringify({bgPosition:e.bgPosArr,history:e.history,size:e.size,boardTable:e.arr,time:e.timerC.currentTime,moves:e.movesCounter,zero:[e.emptyX,e.emptyY],imgNumb:e.imgNumb}))})),document.querySelector(".load").addEventListener("click",(()=>{const{bgPosition:t,history:i,size:s,boardTable:r,time:n,moves:h,zero:o,imgNumb:a}=JSON.parse(localStorage.getItem("gameSave"));e.bgPosArr=t,e.history=i,e.size=s,e.timerC.currentTime=n,e.movesCounter=h,e.arr=r,[e.emptyX,e.emptyY]=o,e.imgNumb=a,e.load(),e.timerC.load()})),document.getElementById("fieldSize").addEventListener("change",(()=>{e.init(),e.timerC.init()})),document.querySelector(".cheat").addEventListener("click",(()=>{e.timerC.timerPause(),e.back()})),document.querySelector(".sound").addEventListener("click",(t=>{e.toggleSound(),e.soundOn?t.target.classList.add("btn-on"):t.target.classList.remove("btn-on")})),document.querySelector(".score").addEventListener("click",(t=>{e.getScoreList(),e.scoreList?t.target.classList.add("btn-on"):t.target.classList.remove("btn-on")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW0tcHV6emxlLy4vc3JjL1RpbWVyLmpzIiwid2VicGFjazovL2dlbS1wdXp6bGUvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZ2VtLXB1enpsZS8uL3NyYy9Cb2FyZC5qcyJdLCJuYW1lcyI6WyJUaW1lciIsInRoaXMiLCJjdXJyZW50VGltZSIsInRpbWUiLCJzZXRJbnRlcnZhbCIsInNlY1RvTWluQW5kU2VjIiwibWludXRlcyIsIk1hdGgiLCJmbG9vciIsInNlYyIsInRvRml4ZWQiLCJ0aW1lciIsInJlbmRlclRpbWVyIiwiY2xlYXJJbnRlcnZhbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImlubmVySFRNTCIsInRpbWVyU3RvcCIsImNhbGNDdXJyZW50VGltZSIsImJvYXJkIiwidGltZXJDIiwiaGlzdG9yeSIsInNpemUiLCJlbXB0eVgiLCJlbXB0eVkiLCJhbmltYXRpb25UaW1lIiwiYm9hcmRXaWR0aCIsIm1hcmdpblNpemUiLCJzb3VuZE9uIiwid2luU291bmQiLCJBdWRpbyIsInNsaWRlU291bmQiLCJ2b2x1bWUiLCJyZW1vdmVCb2FyZCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWxlbSIsImJvZHkiLCJyZW1vdmVDaGlsZCIsImZpbmRFbGVtIiwieCIsImFyciIsImxlbmd0aCIsInkiLCJwYXJzZUludCIsIkVycm9yIiwiZHJhZ0Ryb3AiLCJlIiwiemVybyIsInRhcmdldCIsIm1vdmVhYmxlIiwiaXNOZWFyWmVybyIsInN0eWxlIiwib3JkZXIiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJtYXgiLCJtaW4iLCJpbWdOdW1iIiwicmFuZG9tIiwicG9wIiwiYmFja1RpbWVyIiwiYWJzIiwic2V0VGltZW91dCIsIm1vdmVBbmltYXRpb24iLCJ0ZW1wIiwicmVuZGVyQm9hcmQiLCJwbGF5U2xpZGVTb3VuZCIsImNoZWNrV2luIiwiZGlyZWN0aW9uIiwicHVzaCIsImNvdW50ZXIiLCJiZ1Bvc0FyciIsImkiLCJqIiwicm91bmQiLCJtb3ZlIiwiY2VsbE51bWJlciIsImNsYXNzTmFtZSIsImRyYWdnYWJsZSIsInByZXZlbnREZWYiLCJiR3BvcyIsImJnRm9yQ2VsbCIsImNlbGxTaXplIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhZGQiLCJ3aWR0aCIsImFwcGVuZENoaWxkIiwicmVtUGVyVGljayIsInRpbWVQYXNzZWQiLCJ0cmFuc2Zvcm0iLCJpbkFuaW1hdGlvbiIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsImRyYXciLCJudW1iZXIiLCJtb3Zlc0NvdW50ZXIiLCJ0aW1lclBhdXNlIiwic2NvcmVMaXN0IiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm1vdmVzIiwic29ydCIsImEiLCJiIiwic2xpY2UiLCJzZXRJdGVtIiwic3RyaW5naWZ5Iiwic2NvcmVFbGVtIiwibGlzdCIsImNoZWF0Iiwid2luIiwicGxheVdpblNvdW5kIiwic2V0V2luTWVzc2FnZSIsInNldFNjb3JlIiwid2luQm9hcmQiLCJvcGFjaXR5IiwicGxheSIsInJhbmRvbUltZ051bWJlciIsImdldEVsZW1lbnRCeUlkIiwidmFsdWUiLCJwYXJzZUZsb2F0IiwiY3JlYXRlQm9hcmQiLCJzaHVmZmxlIiwiaW5pdCIsImNlbGwiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0Iiwic3dhcCIsImRyYWdTdGFydCIsImRyYWdPdmVyIiwiZHJhZ0VuZCIsImRyYWdFbnRlciIsImRyYWdMZWF2ZSIsImhlYWRlciIsIm1lbnUiLCJiZ1Bvc2l0aW9uIiwiYm9hcmRUYWJsZSIsImxvYWQiLCJiYWNrIiwidG9nZ2xlU291bmQiLCJnZXRTY29yZUxpc3QiXSwibWFwcGluZ3MiOiJtQkFBZSxNQUFNQSxFQUNuQixjQUNFQyxLQUFLQyxZQUFjLEVBR3JCLGtCQUNFRCxLQUFLRSxLQUFPQyxhQUFZLEtBQ3RCSCxLQUFLQyxhQUFlLEVBQ3BCRCxLQUFLSSxtQkFDSixLQUdMLGlCQUNFSixLQUFLSyxRQUFVQyxLQUFLQyxNQUFNUCxLQUFLQyxZQUFjLElBRTdDRCxLQUFLUSxLQUFPUixLQUFLQyxZQUFjLElBQUlRLFFBQVEsR0FDM0NULEtBQUtVLE1BQVEsR0FBR1YsS0FBS0ssV0FBV0wsS0FBS1EsSUFBTSxHQUFLLElBQU0sS0FBS1IsS0FBS1EsTUFDaEVSLEtBQUtXLGNBR1AsWUFDRUMsY0FBY1osS0FBS0UsTUFDbkJGLEtBQUtVLE1BQVEsT0FDYlYsS0FBS1csY0FHUCxhQUNFQyxjQUFjWixLQUFLRSxNQUdyQixjQUNFVyxTQUFTQyxjQUFjLFNBQVNDLFVBQVlmLEtBQUtVLE1BR25ELE9BQ0VWLEtBQUtnQixZQUNMaEIsS0FBS0MsWUFBYyxLQUNuQkQsS0FBS2lCLGtCQUdQLE9BQ0VqQixLQUFLZ0IsWUFDTGhCLEtBQUtJLGlCQUNMSixLQUFLVyxjQUVMWCxLQUFLaUIsbUJDM0NULE1BQU1DLEVBQVEsSUNBQyxNQUNiLGNBQ0VsQixLQUFLbUIsT0FBUyxJQUFJcEIsRUFDbEJDLEtBQUtvQixRQUFVLEdBQ2ZwQixLQUFLcUIsS0FBTyxFQUNackIsS0FBS3NCLE9BQVMsRUFDZHRCLEtBQUt1QixPQUFTLEVBQ2R2QixLQUFLd0IsY0FBZ0IsSUFDckJ4QixLQUFLeUIsV0FBYSxLQUNsQnpCLEtBQUswQixXQUFhLEdBQ2xCMUIsS0FBSzJCLFNBQVUsRUFDZjNCLEtBQUs0QixTQUFXLElBQUlDLE1BQU0scUJBQzFCN0IsS0FBSzhCLFdBQWEsSUFBSUQsTUFBTSx1QkFDNUI3QixLQUFLOEIsV0FBV0MsT0FBUyxHQUN6Qi9CLEtBQUtnQyxZQUFjLEtBQ2pCbkIsU0FBU29CLGlCQUFpQixVQUFVQyxTQUFTQyxJQUMzQ3RCLFNBQVN1QixLQUFLQyxZQUFZRixPQUc5Qm5DLEtBQUtzQyxTQUFZSCxJQUNmLElBQUssSUFBSUksRUFBSSxFQUFHQSxFQUFJdkMsS0FBS3dDLElBQUlDLE9BQVFGLEdBQUssRUFDeEMsSUFBSyxJQUFJRyxFQUFJLEVBQUdBLEVBQUkxQyxLQUFLd0MsSUFBSUMsT0FBUUMsR0FBSyxFQUN4QyxHQUFJMUMsS0FBS3dDLElBQUlELEdBQUdHLEtBQU9DLFNBQVNSLEVBQUtwQixVQUFXLElBQUssTUFBTyxDQUFFd0IsRUFBR0csR0FHckUsTUFBTSxJQUFJRSxNQUFNVCxJQUVsQm5DLEtBQUs2QyxTQUFZQyxJQUNmLE1BQU1DLEVBQU9ELEVBQUVFLE9BQ1RDLEVBQVdwQyxTQUFTQyxjQUFjLFVBQ2hDeUIsRUFBR0csR0FBTTFDLEtBQUtzQyxTQUFTVyxHQUMzQmpELEtBQUtrRCxXQUFXWCxFQUFHRyxNQUNuQjFDLEtBQUt3QyxJQUFJRCxHQUFHRyxHQUFJMUMsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixTQUFZLENBQ3ZEdkIsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixRQUMzQnZCLEtBQUt3QyxJQUFJRCxHQUFHRyxLQUVaMUMsS0FBS3NCLE9BQVF0QixLQUFLdUIsUUFBVyxDQUFFZ0IsRUFBR0csSUFDbENLLEVBQUtJLE1BQU1DLE1BQU9ILEVBQVNFLE1BQU1DLE9BQVUsQ0FBRUgsRUFBU0UsTUFBTUMsTUFBT0wsRUFBS0ksTUFBTUMsUUFFbEZMLEVBQUtNLFVBQVVDLE9BQU8sWUFJMUIsZ0JBQWdCQyxFQUFLQyxHQUNuQnhELEtBQUt5RCxRQUFVbkQsS0FBS0MsTUFBTUQsS0FBS29ELFVBQVlILEVBQU1DLEdBQU9BLEdBRzFELE9BQ0V4RCxLQUFLb0IsUUFBUXVDLE1BQ2IzRCxLQUFLNEQsWUFHUCxXQUFXckIsRUFBR0csR0FDWixTQUNHcEMsS0FBS3VELElBQUk3RCxLQUFLc0IsT0FBU2lCLElBQU0sR0FBS3ZDLEtBQUt1QixPQUFTbUIsR0FBTSxHQUN0RHBDLEtBQUt1RCxJQUFJN0QsS0FBS3VCLE9BQVNtQixJQUFNLEdBQUsxQyxLQUFLc0IsT0FBU2lCLEdBQU0sR0FJM0QsWUFDRXVCLFlBQVcsS0FDVCxHQUFJOUQsS0FBS29CLFFBQVFxQixPQUFRLENBQ3ZCLE1BQVFGLEVBQUdHLEdBQU0xQyxLQUFLb0IsUUFBUXVDLE1BQzlCM0QsS0FBSzhDLEVBQUlqQyxTQUFTQyxjQUFjLFNBQVNkLEtBQUt3QyxJQUFJRCxHQUFHRyxJQUVyRDFDLEtBQUsrRCxjQUFjLENBQUV4QixFQUFHRyxJQUV4Qm9CLFlBQVcsS0FDVCxNQUFNRSxFQUFPaEUsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixRQUN4Q3ZCLEtBQUt3QyxJQUFJeEMsS0FBS3NCLFFBQVF0QixLQUFLdUIsUUFBVXZCLEtBQUt3QyxJQUFJRCxHQUFHRyxHQUNqRDFDLEtBQUt3QyxJQUFJRCxHQUFHRyxHQUFLc0IsRUFDakJoRSxLQUFLc0IsT0FBU2lCLEVBQ2R2QyxLQUFLdUIsT0FBU21CLEVBQ2QxQyxLQUFLZ0MsY0FDTGhDLEtBQUtpRSxjQUNMakUsS0FBS2tFLGlCQUNMbEUsS0FBSzRELGNBQ0o1RCxLQUFLd0Isb0JBRVJ4QixLQUFLbUUsVUFBUyxLQUVmbkUsS0FBS3dCLGVBR1YsS0FBSzRDLEdBQ0gsT0FBUUEsR0FDTixJQUFLLEtBRWUsSUFBaEJwRSxLQUFLc0IsU0FDSnRCLEtBQUtvQixRQUFRcUIsUUFBVSxHQUFLekMsS0FBS3NCLE9BQVMsSUFBTXRCLEtBQUtvQixRQUFRcEIsS0FBS29CLFFBQVFxQixPQUFTLEdBQUcsS0FFdkZ6QyxLQUFLd0MsSUFBSXhDLEtBQUtzQixRQUFRdEIsS0FBS3VCLFFBQVV2QixLQUFLd0MsSUFBSXhDLEtBQUtzQixPQUFTLEdBQUd0QixLQUFLdUIsUUFDcEV2QixLQUFLd0MsSUFBSXhDLEtBQUtzQixPQUFTLEdBQUd0QixLQUFLdUIsUUFBVSxFQUN6Q3ZCLEtBQUtzQixRQUFVLEVBQ2Z0QixLQUFLb0IsUUFBUWlELEtBQUssQ0FBRXJFLEtBQUtzQixPQUFRdEIsS0FBS3VCLFVBRXRDdkIsS0FBS3NFLFNBQVcsRUFHbEIsTUFDRixJQUFLLE9BRUR0RSxLQUFLc0IsU0FBV3RCLEtBQUtxQixLQUFPLElBQzNCckIsS0FBS29CLFFBQVFxQixRQUFVLEdBQUt6QyxLQUFLc0IsT0FBUyxJQUFNdEIsS0FBS29CLFFBQVFwQixLQUFLb0IsUUFBUXFCLE9BQVMsR0FBRyxLQUV2RnpDLEtBQUt3QyxJQUFJeEMsS0FBS3NCLFFBQVF0QixLQUFLdUIsUUFBVXZCLEtBQUt3QyxJQUFJeEMsS0FBS3NCLE9BQVMsR0FBR3RCLEtBQUt1QixRQUNwRXZCLEtBQUt3QyxJQUFJeEMsS0FBS3NCLE9BQVMsR0FBR3RCLEtBQUt1QixRQUFVLEVBQ3pDdkIsS0FBS3NCLFFBQVUsRUFDZnRCLEtBQUtvQixRQUFRaUQsS0FBSyxDQUFFckUsS0FBS3NCLE9BQVF0QixLQUFLdUIsVUFFdEN2QixLQUFLc0UsU0FBVyxFQUVsQixNQUNGLElBQUssUUFFRHRFLEtBQUt1QixTQUFXdkIsS0FBS3FCLEtBQU8sSUFDM0JyQixLQUFLb0IsUUFBUXFCLFFBQVUsR0FBS3pDLEtBQUt1QixPQUFTLElBQU12QixLQUFLb0IsUUFBUXBCLEtBQUtvQixRQUFRcUIsT0FBUyxHQUFHLEtBRXZGekMsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixRQUFVdkIsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixPQUFTLEdBQ3pFdkIsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixPQUFTLEdBQUssRUFDekN2QixLQUFLdUIsUUFBVSxFQUNmdkIsS0FBS29CLFFBQVFpRCxLQUFLLENBQUVyRSxLQUFLc0IsT0FBUXRCLEtBQUt1QixVQUV0Q3ZCLEtBQUtzRSxTQUFXLEVBRWxCLE1BQ0YsSUFBSyxPQUVlLElBQWhCdEUsS0FBS3VCLFNBQ0p2QixLQUFLb0IsUUFBUXFCLFFBQVUsR0FBS3pDLEtBQUt1QixPQUFTLElBQU12QixLQUFLb0IsUUFBUXBCLEtBQUtvQixRQUFRcUIsT0FBUyxHQUFHLEtBRXZGekMsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixRQUFVdkIsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixPQUFTLEdBQ3pFdkIsS0FBS3dDLElBQUl4QyxLQUFLc0IsUUFBUXRCLEtBQUt1QixPQUFTLEdBQUssRUFDekN2QixLQUFLdUIsUUFBVSxFQUNmdkIsS0FBS29CLFFBQVFpRCxLQUFLLENBQUVyRSxLQUFLc0IsT0FBUXRCLEtBQUt1QixVQUV0Q3ZCLEtBQUtzRSxTQUFXLEVBRWxCLE1BQ0YsUUFDRSxNQUFNLElBQUkxQixNQUFNLFFBSXRCLGNBQ0UsTUFBTUosRUFBTSxHQUVaeEMsS0FBS3VFLFNBQVcsR0FDaEIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUl4RSxLQUFLcUIsS0FBTW1ELEdBQUssRUFBRyxDQUNyQ2hDLEVBQUlnQyxHQUFLLEdBQ1QsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUl6RSxLQUFLcUIsS0FBTW9ELEdBQUssRUFDOUJELEVBQUlDLElBQXdCLEdBQWpCekUsS0FBS3FCLEtBQU8sSUFDekJtQixFQUFJZ0MsR0FBR0MsR0FBS0QsRUFBSXhFLEtBQUtxQixLQUFPb0QsRUFBSSxFQUNoQ3pFLEtBQUt1RSxTQUFTRixLQUNaLEdBQUcvRCxLQUFLb0UsTUFBTSxLQUFPMUUsS0FBS3FCLEtBQU8sR0FBS29ELE9BQU9uRSxLQUFLb0UsTUFBTSxLQUFPMUUsS0FBS3FCLEtBQU8sR0FBS21ELFFBR2xGaEMsRUFBSWdDLEdBQUdDLEdBQUssRUFJbEIsT0FBT2pDLEVBR1QsVUFFRSxJQURBeEMsS0FBS29CLFFBQVFpRCxLQUFLLENBQUVyRSxLQUFLc0IsT0FBUXRCLEtBQUt1QixTQUNqQ3ZCLEtBQUtzRSxRQUFVLEVBQUd0RSxLQUFLc0UsUUFBVXRFLEtBQUtxQixNQUFRLEVBQUdyQixLQUFLc0UsU0FBVyxFQUNwRSxPQUFRaEUsS0FBS0MsTUFBTSxFQUFJRCxLQUFLb0QsV0FDMUIsS0FBSyxFQUdIMUQsS0FBSzJFLEtBQUssTUFFVixNQUNGLEtBQUssRUFFSDNFLEtBQUsyRSxLQUFLLFNBRVYsTUFDRixLQUFLLEVBRUgzRSxLQUFLMkUsS0FBSyxRQUVWLE1BQ0YsS0FBSyxFQUVIM0UsS0FBSzJFLEtBQUssUUFFVixNQUNGLFFBQ0UsTUFBTSxJQUFJL0IsTUFBTSxRQUt4QixjQUNFLElBQUkxQixFQUFRLHFDQUNaLE1BQU1PLEVBQWdCekIsS0FBS3lCLFdBQVIsTUFDbkIsSUFBSW1ELEVBRUosSUFBSyxJQUFJSixFQUFJLEVBQUdwQixFQUFRLEVBQUdvQixFQUFJeEUsS0FBS3FCLEtBQU1tRCxHQUFLLEVBQzdDLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJekUsS0FBS3FCLEtBQU1vRCxHQUFLLEVBQUcsQ0FDckNHLEVBQWE1RSxLQUFLd0MsSUFBSWdDLEdBQUdDLEdBRXpCLE1BQU1JLEVBQVlELEVBQWEsT0FBUyxhQUVsQ0UsSUFBY0YsRUFFZEcsRUFBY0gsRUFBdUQsR0FBMUMsd0NBQzNCSSxFQUFRaEYsS0FBS3VFLFNBQVNLLEVBQWEsR0FDbkNLLEVBQVlMLEVBQ2Qsb0NBQW9DNUUsS0FDakN5RCxzQ0FBc0N1Qix1QkFBMkJ2RCxLQUNwRSxHQUNKMkIsR0FBUyxFQUVUbEMsR0FBUyxrQkFDUDZELDZCQUNlL0UsS0FBS2tGLGtDQUNYbEYsS0FBS2tGLGlDQUNOOUIsaUJBQ042QiwwQkFDU0wsd0JBQ0ZDLDRCQUNJQyxNQUFjRixVQUlqQyxNQUFNTyxFQUFVdEUsU0FBU3VFLGNBQWMsT0FDdkNELEVBQVE5QixVQUFVZ0MsSUFBSSxTQUN0QkYsRUFBUWhDLE1BQU1tQyxNQUFRN0QsRUFDdEIwRCxFQUFRcEUsVUFBWUcsRUFFcEJMLFNBQVN1QixLQUFLbUQsWUFBWUosR0FHNUIsT0FDRSxNQUFNSyxFQUFheEYsS0FBS2tGLFNBQVdsRixLQUFLd0IsY0FBZ0J4QixLQUFLeUYsV0FDN0QsT0FBUXpGLEtBQUtvRSxXQUNYLElBQUssS0FDSHBFLEtBQUs4QyxFQUFFSyxNQUFNdUMsVUFBWSxrQkFBa0JGLFFBQzNDLE1BQ0YsSUFBSyxPQUNIeEYsS0FBSzhDLEVBQUVLLE1BQU11QyxVQUFZLGlCQUFpQkYsUUFDMUMsTUFDRixJQUFLLE9BQ0h4RixLQUFLOEMsRUFBRUssTUFBTXVDLFVBQVksZUFBZUYsV0FDeEMsTUFDRixJQUFLLFFBQ0h4RixLQUFLOEMsRUFBRUssTUFBTXVDLFVBQVksY0FBY0YsV0FDdkMsTUFDRixRQUNFLE1BQU0sSUFBSTVDLE1BQU0sUUFJdEIsZUFBZ0JMLEVBQUdHLElBQ2IxQyxLQUFLc0IsT0FBU2lCLEVBQ2hCdkMsS0FBS29FLFVBQVksS0FDUnBFLEtBQUtzQixPQUFTaUIsRUFDdkJ2QyxLQUFLb0UsVUFBWSxPQUNScEUsS0FBS3VCLE9BQVNtQixFQUN2QjFDLEtBQUtvRSxVQUFZLE9BQ1JwRSxLQUFLdUIsT0FBU21CLElBQ3ZCMUMsS0FBS29FLFVBQVksU0FHbkJwRSxLQUFLMkYsYUFBYyxFQUNuQjNGLEtBQUs0RixNQUFRQyxLQUFLQyxNQUVsQjlGLEtBQUtVLE1BQVFQLGFBQVksS0FHdkIsR0FGQUgsS0FBS3lGLFdBQWFJLEtBQUtDLE1BQVE5RixLQUFLNEYsTUFFaEM1RixLQUFLeUYsWUFBY3pGLEtBQUt3QixjQUcxQixPQUZBWixjQUFjWixLQUFLVSxZQUNuQlYsS0FBSzJGLGFBQWMsR0FJckIzRixLQUFLK0YsU0FDSixJQUdMLGNBQ0UvRixLQUFLMkIsU0FBVzNCLEtBQUsyQixRQUd2QixLQUFLcUUsR0FDSCxJQUFJaEcsS0FBSzJGLFlBRVQsSUFBSyxJQUFJbkIsRUFBSSxFQUFHQSxFQUFJeEUsS0FBS3dDLElBQUlDLE9BQVErQixHQUFLLEVBQ3hDLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJekUsS0FBS3dDLElBQUlnQyxHQUFHL0IsT0FBUWdDLEdBQUssRUFDM0MsR0FBSXpFLEtBQUt3QyxJQUFJZ0MsR0FBR0MsS0FBT3VCLEdBQ2pCaEcsS0FBS2tELFdBQVdzQixFQUFHQyxHQUFJLENBRXpCekUsS0FBS2lHLGNBQWdCLEVBQ3JCcEYsU0FBU0MsY0FBYyxTQUFTQyxVQUFZZixLQUFLaUcsYUFFakQsTUFBTWxELEVBQU9sQyxTQUFTQyxjQUFjLFNBQVNkLEtBQUt3QyxJQUFJeEMsS0FBS3NCLFFBQVF0QixLQUFLdUIsU0E2QnhFLE9BNUJBdkIsS0FBSzhDLEVBQUlqQyxTQUFTQyxjQUFjLFNBQVNkLEtBQUt3QyxJQUFJZ0MsR0FBR0MsSUFHckR6RSxLQUFLK0QsY0FBYyxDQUFFUyxFQUFHQyxJQUV4QnpFLEtBQUtrRSxpQkFFTEosWUFBVyxLQUNULE1BQU1FLEVBQU9qQixFQUFLSSxNQUFNQyxNQUN4QkwsRUFBS0ksTUFBTUMsTUFBUXBELEtBQUs4QyxFQUFFSyxNQUFNQyxNQUNoQ3BELEtBQUs4QyxFQUFFSyxNQUFNQyxNQUFRWSxFQUVyQmhFLEtBQUs4QyxFQUFFSyxNQUFNdUMsVUFBWSxHQUVyQjFGLEtBQUtzQixTQUFXdEIsS0FBS3VCLFFBQVV2QixLQUFLdUIsU0FBV3ZCLEtBQUtxQixLQUFPLEdBQ3pEckIsS0FBS21FLFlBQ1BuRSxLQUFLbUIsT0FBTytFLGVBR2ZsRyxLQUFLd0IsZ0JBQ054QixLQUFLd0MsSUFBSWdDLEdBQUdDLEdBQUl6RSxLQUFLd0MsSUFBSXhDLEtBQUtzQixRQUFRdEIsS0FBS3VCLFNBQVksQ0FDdkR2QixLQUFLd0MsSUFBSXhDLEtBQUtzQixRQUFRdEIsS0FBS3VCLFFBQzNCdkIsS0FBS3dDLElBQUlnQyxHQUFHQyxJQUVkekUsS0FBS3NCLE9BQVNrRCxFQUNkeEUsS0FBS3VCLE9BQVNrRCxPQUVkekUsS0FBS29CLFFBQVFpRCxLQUFLLENBQUVyRSxLQUFLc0IsT0FBUXRCLEtBQUt1QixVQVFoRCxXQUNFLElBQUk0RSxFQUFZQyxLQUFLQyxNQUFNQyxhQUFhQyxRQUFRLGdCQUFrQixHQUNsRUosRUFBVTlCLEtBQUssQ0FBRW1DLE1BQU94RyxLQUFLaUcsYUFBYzVFLEtBQU1yQixLQUFLcUIsS0FBTW5CLEtBQU1GLEtBQUttQixPQUFPVCxRQUMxRXlGLEVBQVUxRCxPQUFTLEtBQ3JCMEQsRUFBVU0sTUFBSyxDQUFDQyxFQUFHQyxJQUNWRCxFQUFFRixNQUFRRyxFQUFFSCxRQUVyQkwsRUFBWUEsRUFBVVMsTUFBTSxFQUFHLEtBRWpDTixhQUFhTyxRQUFRLGFBQWNULEtBQUtVLFVBQVVYLElBR3BELGVBQ0VuRyxLQUFLbUcsV0FBYW5HLEtBQUttRyxVQUV2QixNQUFNWSxFQUFZbEcsU0FBU0MsY0FBYyxlQUNuQ3FGLEVBQVlDLEtBQUtDLE1BQU1DLGFBQWFDLFFBQVEsZ0JBQWtCLEdBQ3BFLElBQUlTLEVBQU8sR0FFWCxJQUFLLElBQUl4QyxFQUFJMkIsRUFBVTFELE9BQVMsRUFBRytCLEdBQUssRUFBR0EsR0FBSyxFQUM5Q3dDLEdBQVEsYUFBYWIsRUFBVTNCLEdBQUduRCx1Q0FBdUM4RSxFQUFVM0IsR0FDaEZnQyx1Q0FBdUNMLEVBQVUzQixHQUFHdEUsWUFFekQ2RyxFQUFVaEcsVUFBWSxpREFDQWlHLFNBQ2xCaEgsS0FBS21HLFdBQ1BZLEVBQVUxRCxVQUFVZ0MsSUFBSSxpQkFDeEJyRixLQUFLbUIsT0FBTytFLGVBRVphLEVBQVUxRCxVQUFVQyxPQUFPLGlCQUMzQnRELEtBQUttQixPQUFPRixtQkFJaEIsU0FBU2dHLEdBQ1AsSUFBSyxJQUFJekMsRUFBSSxFQUFHQSxFQUFJeEUsS0FBS3FCLEtBQU1tRCxHQUFLLEVBQ2xDLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJekUsS0FBS3FCLEtBQU1vRCxHQUFLLEVBQ2xDLEdBQUlELEVBQUlDLElBQXdCLEdBQWpCekUsS0FBS3FCLEtBQU8sSUFDckJyQixLQUFLa0gsSUFBSTFDLEdBQUdDLEtBQU96RSxLQUFLd0MsSUFBSWdDLEdBQUdDLEdBQUksT0FBTyxFQU9wRCxPQUhBekUsS0FBS21ILGVBQ0xuSCxLQUFLb0gsY0FBY0gsR0FDbkJqSCxLQUFLcUgsWUFDRSxFQUdULGNBQWNKLEdBQ1pqSCxLQUFLc0gsU0FBV3pHLFNBQVNDLGNBQWMsVUFDdkNkLEtBQUtzSCxTQUFTakUsVUFBVWdDLElBQUksT0FFNUJyRixLQUFLc0gsU0FBU3ZHLFdBQWEsc0RBQXNEZixLQUM5RXlELG1DQUFtQ3dELEVBQ2xDLFNBQ0EsaUNBQWlDcEcsU0FBU0MsY0FBYyxTQUNyREMsZUFBZUYsU0FBU0MsY0FBYyxTQUFTQyxnQ0FDdEQrQyxZQUFXLEtBQ1Q5RCxLQUFLc0gsU0FBU3hHLGNBQWMsYUFBYXFDLE1BQU1vRSxRQUFVLElBQ3hELElBR0wsZUFDT3ZILEtBQUsyQixVQUNWM0IsS0FBSzRCLFNBQVMzQixZQUFjLEVBQzVCRCxLQUFLNEIsU0FBUzRGLFFBR2hCLGlCQUNPeEgsS0FBSzJCLFVBQ1YzQixLQUFLOEIsV0FBVzdCLFlBQWMsRUFDOUJELEtBQUs4QixXQUFXMEYsUUFHbEIsWUFDRTFELFlBQVcsS0FDVDlELEtBQUtxRCxVQUFVZ0MsSUFBSSxVQUNsQixHQUdMLFVBQ0VyRixLQUFLcUQsVUFBVUMsT0FBTyxRQUd4QixZQUNFdEQsS0FBS3FELFVBQVVnQyxJQUFJLFdBR3JCLFlBQ0VyRixLQUFLcUQsVUFBVUMsT0FBTyxXQUd4QixPQUNFdEQsS0FBS21HLFdBQVksRUFDakJuRyxLQUFLeUgsZ0JBQWdCLElBQUssR0FDMUJ6SCxLQUFLb0IsUUFBVSxHQUNmcEIsS0FBS2lHLGFBQWUsRUFDcEJwRixTQUFTQyxjQUFjLFNBQVNDLFVBQVlmLEtBQUtpRyxhQUNqRGpHLEtBQUtxQixLQUFPUixTQUFTNkcsZUFBZSxhQUFhQyxNQUVqRDNILEtBQUtrRixTQUFXMEMsV0FBVzVILEtBQUt5QixXQUFhekIsS0FBS3FCLEtBQU8sRUFBSXJCLEtBQUswQixZQUFZakIsUUFBUSxHQUV0RlQsS0FBS2dDLGNBRUxoQyxLQUFLc0IsT0FBU3RCLEtBQUtxQixLQUFPLEVBQzFCckIsS0FBS3VCLE9BQVN2QixLQUFLcUIsS0FBTyxFQUUxQnJCLEtBQUt3QyxJQUFNeEMsS0FBSzZILGNBQ2hCN0gsS0FBS2tILElBQU1sSCxLQUFLNkgsY0FFaEI3SCxLQUFLOEgsVUFFTDlILEtBQUtpRSxjQUNMakUsS0FBS21CLE9BQU80RyxPQUVabEgsU0FBU29CLGlCQUFpQixTQUFTQyxTQUFTOEYsSUFDMUNBLEVBQUtDLGlCQUFpQixXQUFZQyxJQUNoQyxNQUFNL0YsRUFBTytGLEVBQUlsRixPQUNqQmhELEtBQUttSSxLQUFLeEYsU0FBU1IsRUFBS3BCLFVBQVcsUUFHckNpSCxFQUFLQyxpQkFBaUIsWUFBYWpJLEtBQUtvSSxXQUV4Q0osRUFBS0MsaUJBQWlCLFdBQVlqSSxLQUFLcUksVUFFdkNMLEVBQUtDLGlCQUFpQixPQUFRakksS0FBSzZDLFVBRW5DbUYsRUFBS0MsaUJBQWlCLFVBQVdqSSxLQUFLc0ksU0FFdENOLEVBQUtDLGlCQUFpQixZQUFhakksS0FBS3VJLFdBRXhDUCxFQUFLQyxpQkFBaUIsWUFBYWpJLEtBQUt3SSxjQUk1QyxPQUNFeEksS0FBS2tGLFNBQVcwQyxXQUFXNUgsS0FBS3lCLFdBQWF6QixLQUFLcUIsS0FBTyxFQUFJckIsS0FBSzBCLFlBQVlqQixRQUFRLEdBQ3RGSSxTQUFTQyxjQUFjLFNBQVNDLFVBQVlmLEtBQUtpRyxhQUNqRGpHLEtBQUtnQyxjQUNMaEMsS0FBS2lFLGNBQ0xqRSxLQUFLa0gsSUFBTWxILEtBQUs2SCxjQUNoQjdILEtBQUttQixPQUFPNEcsT0FFWmxILFNBQVNvQixpQkFBaUIsU0FBU0MsU0FBUzhGLElBQzFDQSxFQUFLQyxpQkFBaUIsV0FBWUMsSUFDaEMsTUFBTS9GLEVBQU8rRixFQUFJbEYsT0FDakJoRCxLQUFLbUksS0FBS3hGLFNBQVNSLEVBQUtwQixVQUFXLFFBR3JDaUgsRUFBS0MsaUJBQWlCLFlBQWFqSSxLQUFLb0ksV0FFeENKLEVBQUtDLGlCQUFpQixXQUFZakksS0FBS3FJLFVBRXZDTCxFQUFLQyxpQkFBaUIsT0FBUWpJLEtBQUs2QyxVQUVuQ21GLEVBQUtDLGlCQUFpQixVQUFXakksS0FBS3NJLGNEdmV0Q0csRUFBUzVILFNBQVN1RSxjQUFjLFVBQ3RDcUQsRUFBT3BGLFVBQVVnQyxJQUFJLFVBQ3JCb0QsRUFBTzFILFVBQVksc0NBQ25CRixTQUFTdUIsS0FBS21ELFlBQVlrRCxHQUUxQixNQUFNQyxFQUFPN0gsU0FBU3VFLGNBQWMsT0FDcENzRCxFQUFLckYsVUFBVWdDLElBQUksUUFFbkJxRCxFQUFLM0gsVUFBWSxtUEFNY0csRUFBTVMsUUFBVSxTQUFXLGtwQkFtQjFEZCxTQUFTdUIsS0FBS21ELFlBQVltRCxHQUUxQnhILEVBQU02RyxPQUVObEgsU0FBU0MsY0FBYyxhQUFhbUgsaUJBQWlCLFNBQVMsS0FDNUQvRyxFQUFNNkcsVUFHUmxILFNBQVNDLGNBQWMsU0FBU21ILGlCQUFpQixTQUFTLEtBQ3hEM0IsYUFBYU8sUUFDWCxXQUNBVCxLQUFLVSxVQUFVLENBQ2I2QixXQUFZekgsRUFBTXFELFNBQ2xCbkQsUUFBU0YsRUFBTUUsUUFDZkMsS0FBTUgsRUFBTUcsS0FDWnVILFdBQVkxSCxFQUFNc0IsSUFDbEJ0QyxLQUFNZ0IsRUFBTUMsT0FBT2xCLFlBQ25CdUcsTUFBT3RGLEVBQU0rRSxhQUNibEQsS0FBTSxDQUFFN0IsRUFBTUksT0FBUUosRUFBTUssUUFDNUJrQyxRQUFTdkMsRUFBTXVDLGNBS3JCNUMsU0FBU0MsY0FBYyxTQUFTbUgsaUJBQWlCLFNBQVMsS0FDeEQsTUFBTSxXQUFFVSxFQUFVLFFBQUV2SCxFQUFPLEtBQUVDLEVBQUksV0FBRXVILEVBQVUsS0FBRTFJLEVBQUksTUFBRXNHLEVBQUssS0FBRXpELEVBQUksUUFBRVUsR0FBWTJDLEtBQUtDLE1BQ2pGQyxhQUFhQyxRQUFRLGFBRXZCckYsRUFBTXFELFNBQVdvRSxFQUNqQnpILEVBQU1FLFFBQVVBLEVBQ2hCRixFQUFNRyxLQUFPQSxFQUNiSCxFQUFNQyxPQUFPbEIsWUFBY0MsRUFDM0JnQixFQUFNK0UsYUFBZU8sRUFDckJ0RixFQUFNc0IsSUFBTW9HLEdBQ1YxSCxFQUFNSSxPQUFRSixFQUFNSyxRQUFXd0IsRUFDakM3QixFQUFNdUMsUUFBVUEsRUFDaEJ2QyxFQUFNMkgsT0FDTjNILEVBQU1DLE9BQU8wSCxVQUdmaEksU0FBUzZHLGVBQWUsYUFBYU8saUJBQWlCLFVBQVUsS0FDOUQvRyxFQUFNNkcsT0FDTjdHLEVBQU1DLE9BQU80RyxVQUdmbEgsU0FBU0MsY0FBYyxVQUFVbUgsaUJBQWlCLFNBQVMsS0FDekQvRyxFQUFNQyxPQUFPK0UsYUFDYmhGLEVBQU00SCxVQUdSakksU0FBU0MsY0FBYyxVQUFVbUgsaUJBQWlCLFNBQVVDLElBQzFEaEgsRUFBTTZILGNBQ0Y3SCxFQUFNUyxRQUNSdUcsRUFBSWxGLE9BQU9LLFVBQVVnQyxJQUFJLFVBRXpCNkMsRUFBSWxGLE9BQU9LLFVBQVVDLE9BQU8sYUFJaEN6QyxTQUFTQyxjQUFjLFVBQVVtSCxpQkFBaUIsU0FBVUMsSUFDMURoSCxFQUFNOEgsZUFDRjlILEVBQU1pRixVQUNSK0IsRUFBSWxGLE9BQU9LLFVBQVVnQyxJQUFJLFVBRXpCNkMsRUFBSWxGLE9BQU9LLFVBQVVDLE9BQU8sYyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGltZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5jdXJyZW50VGltZSA9IDA7XHJcbiAgfVxyXG5cclxuICBjYWxjQ3VycmVudFRpbWUoKSB7XHJcbiAgICB0aGlzLnRpbWUgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIHRoaXMuY3VycmVudFRpbWUgKz0gMTtcclxuICAgICAgdGhpcy5zZWNUb01pbkFuZFNlYygpO1xyXG4gICAgfSwgMTAwMCk7XHJcbiAgfVxyXG5cclxuICBzZWNUb01pbkFuZFNlYygpIHtcclxuICAgIHRoaXMubWludXRlcyA9IE1hdGguZmxvb3IodGhpcy5jdXJyZW50VGltZSAvIDYwKTtcclxuXHJcbiAgICB0aGlzLnNlYyA9ICh0aGlzLmN1cnJlbnRUaW1lICUgNjApLnRvRml4ZWQoMCk7XHJcbiAgICB0aGlzLnRpbWVyID0gYCR7dGhpcy5taW51dGVzfToke3RoaXMuc2VjIDwgMTAgPyAnMCcgOiAnJ30ke3RoaXMuc2VjfWA7XHJcbiAgICB0aGlzLnJlbmRlclRpbWVyKCk7XHJcbiAgfVxyXG5cclxuICB0aW1lclN0b3AoKSB7XHJcbiAgICBjbGVhckludGVydmFsKHRoaXMudGltZSk7XHJcbiAgICB0aGlzLnRpbWVyID0gJzA6MDAnO1xyXG4gICAgdGhpcy5yZW5kZXJUaW1lcigpO1xyXG4gIH1cclxuXHJcbiAgdGltZXJQYXVzZSgpIHtcclxuICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lKTtcclxuICB9XHJcblxyXG4gIHJlbmRlclRpbWVyKCkge1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRpbWUnKS5pbm5lckhUTUwgPSB0aGlzLnRpbWVyO1xyXG4gIH1cclxuXHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMudGltZXJTdG9wKCk7XHJcbiAgICB0aGlzLmN1cnJlbnRUaW1lID0gbnVsbDtcclxuICAgIHRoaXMuY2FsY0N1cnJlbnRUaW1lKCk7XHJcbiAgfVxyXG5cclxuICBsb2FkKCkge1xyXG4gICAgdGhpcy50aW1lclN0b3AoKTtcclxuICAgIHRoaXMuc2VjVG9NaW5BbmRTZWMoKTtcclxuICAgIHRoaXMucmVuZGVyVGltZXIoKTtcclxuXHJcbiAgICB0aGlzLmNhbGNDdXJyZW50VGltZSgpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgQm9hcmQgZnJvbSAnLi9Cb2FyZC5qcyc7XHJcblxyXG5jb25zdCBib2FyZCA9IG5ldyBCb2FyZCgpO1xyXG5cclxuY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaGVhZGVyJyk7XHJcbmhlYWRlci5jbGFzc0xpc3QuYWRkKCdoZWFkZXInKTtcclxuaGVhZGVyLmlubmVySFRNTCA9ICc8aDEgY2xhc3M9XCJoZWFkaW5nXCI+Z2VtIHB1enpsZTwvaDE+JztcclxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChoZWFkZXIpO1xyXG5cclxuY29uc3QgbWVudSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5tZW51LmNsYXNzTGlzdC5hZGQoJ21lbnUnKTtcclxuXHJcbm1lbnUuaW5uZXJIVE1MID0gYCAgXHJcbiAgPGRpdiBjbGFzcz1cInNldHRpbmdzXCI+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwibmV3LWdhbWUgYnRuXCI+TmV3PC9idXR0b24+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwic2F2ZSBidG5cIj5TYXZlPC9idXR0b24+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwibG9hZCBidG5cIj5Mb2FkPC9idXR0b24+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwic2NvcmUgYnRuXCI+U2NvcmU8L2J1dHRvbj5cclxuICAgIDxidXR0b24gY2xhc3M9XCJzb3VuZCBidG4gJHtib2FyZC5zb3VuZE9uID8gJ2J0bi1vbicgOiAnJ31cIj5Tb3VuZDwvYnV0dG9uPlxyXG4gICAgPGRpdiBjbGFzcz1cInNpemVcIj5cclxuICAgICAgPHNlbGVjdCBpZD1cImZpZWxkU2l6ZVwiPlxyXG4gICAgICA8b3B0aW9uIHNlbGVjdGVkPVwic2VsZWN0ZWRcIiB2YWx1ZT1cIjRcIiBkaXNhYmxlZD5GaWVsZCBzaXplPC9vcHRpb24+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjNcIj4zPC9vcHRpb24+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjRcIj40PC9vcHRpb24+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjVcIj41PC9vcHRpb24+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjZcIj42PC9vcHRpb24+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjdcIj43PC9vcHRpb24+XHJcbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjhcIj44PC9vcHRpb24+XHJcbiAgICAgIDwvc2VsZWN0PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiY2hlYXQgYnRuXCI+Q0hFQVQ8L2J1dHRvbj5cclxuICA8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwiY291bnRlcnNcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJ0aW1lclwiPjxzcGFuPlRpbWVyOiA8L3NwYW4+PHNwYW4gY2xhc3M9XCJ0aW1lXCI+MDowMDwvc3Bhbj48L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJtb3Zlc1wiPjxzcGFuPk1vdmVzOiA8L3NwYW4+PHNwYW4gY2xhc3M9XCJtb3ZlXCI+MDwvc3Bhbj48L2Rpdj5cclxuICA8L2Rpdj5gO1xyXG5cclxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZW51KTtcclxuXHJcbmJvYXJkLmluaXQoKTtcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXctZ2FtZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGJvYXJkLmluaXQoKTtcclxufSk7XHJcblxyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2F2ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxyXG4gICAgJ2dhbWVTYXZlJyxcclxuICAgIEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgYmdQb3NpdGlvbjogYm9hcmQuYmdQb3NBcnIsXHJcbiAgICAgIGhpc3Rvcnk6IGJvYXJkLmhpc3RvcnksXHJcbiAgICAgIHNpemU6IGJvYXJkLnNpemUsXHJcbiAgICAgIGJvYXJkVGFibGU6IGJvYXJkLmFycixcclxuICAgICAgdGltZTogYm9hcmQudGltZXJDLmN1cnJlbnRUaW1lLFxyXG4gICAgICBtb3ZlczogYm9hcmQubW92ZXNDb3VudGVyLFxyXG4gICAgICB6ZXJvOiBbIGJvYXJkLmVtcHR5WCwgYm9hcmQuZW1wdHlZIF0sXHJcbiAgICAgIGltZ051bWI6IGJvYXJkLmltZ051bWJcclxuICAgIH0pXHJcbiAgKTtcclxufSk7XHJcblxyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGNvbnN0IHsgYmdQb3NpdGlvbiwgaGlzdG9yeSwgc2l6ZSwgYm9hcmRUYWJsZSwgdGltZSwgbW92ZXMsIHplcm8sIGltZ051bWIgfSA9IEpTT04ucGFyc2UoXHJcbiAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2FtZVNhdmUnKVxyXG4gICk7XHJcbiAgYm9hcmQuYmdQb3NBcnIgPSBiZ1Bvc2l0aW9uO1xyXG4gIGJvYXJkLmhpc3RvcnkgPSBoaXN0b3J5O1xyXG4gIGJvYXJkLnNpemUgPSBzaXplO1xyXG4gIGJvYXJkLnRpbWVyQy5jdXJyZW50VGltZSA9IHRpbWU7XHJcbiAgYm9hcmQubW92ZXNDb3VudGVyID0gbW92ZXM7XHJcbiAgYm9hcmQuYXJyID0gYm9hcmRUYWJsZTtcclxuICBbIGJvYXJkLmVtcHR5WCwgYm9hcmQuZW1wdHlZIF0gPSB6ZXJvO1xyXG4gIGJvYXJkLmltZ051bWIgPSBpbWdOdW1iO1xyXG4gIGJvYXJkLmxvYWQoKTtcclxuICBib2FyZC50aW1lckMubG9hZCgpO1xyXG59KTtcclxuXHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaWVsZFNpemUnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XHJcbiAgYm9hcmQuaW5pdCgpO1xyXG4gIGJvYXJkLnRpbWVyQy5pbml0KCk7XHJcbn0pO1xyXG5cclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoZWF0JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgYm9hcmQudGltZXJDLnRpbWVyUGF1c2UoKTtcclxuICBib2FyZC5iYWNrKCk7XHJcbn0pO1xyXG5cclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNvdW5kJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XHJcbiAgYm9hcmQudG9nZ2xlU291bmQoKTtcclxuICBpZiAoYm9hcmQuc291bmRPbikge1xyXG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuYWRkKCdidG4tb24nKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdidG4tb24nKTtcclxuICB9XHJcbn0pO1xyXG5cclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNjb3JlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XHJcbiAgYm9hcmQuZ2V0U2NvcmVMaXN0KCk7XHJcbiAgaWYgKGJvYXJkLnNjb3JlTGlzdCkge1xyXG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuYWRkKCdidG4tb24nKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdidG4tb24nKTtcclxuICB9XHJcbn0pO1xyXG4iLCJpbXBvcnQgVGltZXIgZnJvbSAnLi9UaW1lci5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb2FyZCB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnRpbWVyQyA9IG5ldyBUaW1lcigpO1xyXG4gICAgdGhpcy5oaXN0b3J5ID0gW107XHJcbiAgICB0aGlzLnNpemUgPSA0O1xyXG4gICAgdGhpcy5lbXB0eVggPSAwO1xyXG4gICAgdGhpcy5lbXB0eVkgPSAwO1xyXG4gICAgdGhpcy5hbmltYXRpb25UaW1lID0gMjAwO1xyXG4gICAgdGhpcy5ib2FyZFdpZHRoID0gNDAuODtcclxuICAgIHRoaXMubWFyZ2luU2l6ZSA9IDAuMTtcclxuICAgIHRoaXMuc291bmRPbiA9IHRydWU7XHJcbiAgICB0aGlzLndpblNvdW5kID0gbmV3IEF1ZGlvKCcuLi9hc3NldHMvd2luLm1wMycpO1xyXG4gICAgdGhpcy5zbGlkZVNvdW5kID0gbmV3IEF1ZGlvKCcuLi9hc3NldHMvc2xpZGUubXAzJyk7XHJcbiAgICB0aGlzLnNsaWRlU291bmQudm9sdW1lID0gMC4yO1xyXG4gICAgdGhpcy5yZW1vdmVCb2FyZCA9ICgpID0+IHtcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJvYXJkJykuZm9yRWFjaCgoZWxlbSkgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZWxlbSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIHRoaXMuZmluZEVsZW0gPSAoZWxlbSkgPT4ge1xyXG4gICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IHRoaXMuYXJyLmxlbmd0aDsgeCArPSAxKSB7XHJcbiAgICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLmFyci5sZW5ndGg7IHkgKz0gMSkge1xyXG4gICAgICAgICAgaWYgKHRoaXMuYXJyW3hdW3ldID09PSBwYXJzZUludChlbGVtLmlubmVySFRNTCwgMTApKSByZXR1cm4gWyB4LCB5IF07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihlbGVtKTtcclxuICAgIH07XHJcbiAgICB0aGlzLmRyYWdEcm9wID0gKGUpID0+IHtcclxuICAgICAgY29uc3QgemVybyA9IGUudGFyZ2V0O1xyXG4gICAgICBjb25zdCBtb3ZlYWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oaWRlJyk7XHJcbiAgICAgIGNvbnN0IFsgeCwgeSBdID0gdGhpcy5maW5kRWxlbShtb3ZlYWJsZSk7XHJcbiAgICAgIGlmICh0aGlzLmlzTmVhclplcm8oeCwgeSkpIHtcclxuICAgICAgICBbIHRoaXMuYXJyW3hdW3ldLCB0aGlzLmFyclt0aGlzLmVtcHR5WF1bdGhpcy5lbXB0eVldIF0gPSBbXHJcbiAgICAgICAgICB0aGlzLmFyclt0aGlzLmVtcHR5WF1bdGhpcy5lbXB0eVldLFxyXG4gICAgICAgICAgdGhpcy5hcnJbeF1beV1cclxuICAgICAgICBdO1xyXG4gICAgICAgIFsgdGhpcy5lbXB0eVgsIHRoaXMuZW1wdHlZIF0gPSBbIHgsIHkgXTtcclxuICAgICAgICBbIHplcm8uc3R5bGUub3JkZXIsIG1vdmVhYmxlLnN0eWxlLm9yZGVyIF0gPSBbIG1vdmVhYmxlLnN0eWxlLm9yZGVyLCB6ZXJvLnN0eWxlLm9yZGVyIF07XHJcbiAgICAgIH1cclxuICAgICAgemVyby5jbGFzc0xpc3QucmVtb3ZlKCdob3ZlcmVkJyk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcmFuZG9tSW1nTnVtYmVyKG1heCwgbWluKSB7XHJcbiAgICB0aGlzLmltZ051bWIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7XHJcbiAgfVxyXG5cclxuICBiYWNrKCkge1xyXG4gICAgdGhpcy5oaXN0b3J5LnBvcCgpO1xyXG4gICAgdGhpcy5iYWNrVGltZXIoKTtcclxuICB9XHJcblxyXG4gIGlzTmVhclplcm8oeCwgeSkge1xyXG4gICAgcmV0dXJuICEhKFxyXG4gICAgICAoTWF0aC5hYnModGhpcy5lbXB0eVggLSB4KSA8PSAxICYmIHRoaXMuZW1wdHlZIC0geSA9PT0gMCkgfHxcclxuICAgICAgKE1hdGguYWJzKHRoaXMuZW1wdHlZIC0geSkgPD0gMSAmJiB0aGlzLmVtcHR5WCAtIHggPT09IDApXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgYmFja1RpbWVyKCkge1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLmhpc3RvcnkubGVuZ3RoKSB7XHJcbiAgICAgICAgY29uc3QgWyB4LCB5IF0gPSB0aGlzLmhpc3RvcnkucG9wKCk7XHJcbiAgICAgICAgdGhpcy5lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2NlbGwtJHt0aGlzLmFyclt4XVt5XX1gKTtcclxuXHJcbiAgICAgICAgdGhpcy5tb3ZlQW5pbWF0aW9uKFsgeCwgeSBdKTtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCB0ZW1wID0gdGhpcy5hcnJbdGhpcy5lbXB0eVhdW3RoaXMuZW1wdHlZXTtcclxuICAgICAgICAgIHRoaXMuYXJyW3RoaXMuZW1wdHlYXVt0aGlzLmVtcHR5WV0gPSB0aGlzLmFyclt4XVt5XTtcclxuICAgICAgICAgIHRoaXMuYXJyW3hdW3ldID0gdGVtcDtcclxuICAgICAgICAgIHRoaXMuZW1wdHlYID0geDtcclxuICAgICAgICAgIHRoaXMuZW1wdHlZID0geTtcclxuICAgICAgICAgIHRoaXMucmVtb3ZlQm9hcmQoKTtcclxuICAgICAgICAgIHRoaXMucmVuZGVyQm9hcmQoKTtcclxuICAgICAgICAgIHRoaXMucGxheVNsaWRlU291bmQoKTtcclxuICAgICAgICAgIHRoaXMuYmFja1RpbWVyKCk7XHJcbiAgICAgICAgfSwgdGhpcy5hbmltYXRpb25UaW1lKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLmNoZWNrV2luKHRydWUpO1xyXG4gICAgICB9XHJcbiAgICB9LCB0aGlzLmFuaW1hdGlvblRpbWUpO1xyXG4gIH1cclxuXHJcbiAgbW92ZShkaXJlY3Rpb24pIHtcclxuICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XHJcbiAgICAgIGNhc2UgJ3VwJzpcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICB0aGlzLmVtcHR5WCAhPT0gMCAmJlxyXG4gICAgICAgICAgKHRoaXMuaGlzdG9yeS5sZW5ndGggPD0gMSB8fCB0aGlzLmVtcHR5WCAtIDEgIT09IHRoaXMuaGlzdG9yeVt0aGlzLmhpc3RvcnkubGVuZ3RoIC0gMl1bMF0pXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICB0aGlzLmFyclt0aGlzLmVtcHR5WF1bdGhpcy5lbXB0eVldID0gdGhpcy5hcnJbdGhpcy5lbXB0eVggLSAxXVt0aGlzLmVtcHR5WV07XHJcbiAgICAgICAgICB0aGlzLmFyclt0aGlzLmVtcHR5WCAtIDFdW3RoaXMuZW1wdHlZXSA9IDA7XHJcbiAgICAgICAgICB0aGlzLmVtcHR5WCAtPSAxO1xyXG4gICAgICAgICAgdGhpcy5oaXN0b3J5LnB1c2goWyB0aGlzLmVtcHR5WCwgdGhpcy5lbXB0eVkgXSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuY291bnRlciAtPSAxO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2Rvd24nOlxyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgIHRoaXMuZW1wdHlYICE9PSB0aGlzLnNpemUgLSAxICYmXHJcbiAgICAgICAgICAodGhpcy5oaXN0b3J5Lmxlbmd0aCA8PSAxIHx8IHRoaXMuZW1wdHlYICsgMSAhPT0gdGhpcy5oaXN0b3J5W3RoaXMuaGlzdG9yeS5sZW5ndGggLSAyXVswXSlcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuYXJyW3RoaXMuZW1wdHlYXVt0aGlzLmVtcHR5WV0gPSB0aGlzLmFyclt0aGlzLmVtcHR5WCArIDFdW3RoaXMuZW1wdHlZXTtcclxuICAgICAgICAgIHRoaXMuYXJyW3RoaXMuZW1wdHlYICsgMV1bdGhpcy5lbXB0eVldID0gMDtcclxuICAgICAgICAgIHRoaXMuZW1wdHlYICs9IDE7XHJcbiAgICAgICAgICB0aGlzLmhpc3RvcnkucHVzaChbIHRoaXMuZW1wdHlYLCB0aGlzLmVtcHR5WSBdKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5jb3VudGVyIC09IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdyaWdodCc6XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgdGhpcy5lbXB0eVkgIT09IHRoaXMuc2l6ZSAtIDEgJiZcclxuICAgICAgICAgICh0aGlzLmhpc3RvcnkubGVuZ3RoIDw9IDEgfHwgdGhpcy5lbXB0eVkgKyAxICE9PSB0aGlzLmhpc3RvcnlbdGhpcy5oaXN0b3J5Lmxlbmd0aCAtIDJdWzFdKVxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgdGhpcy5hcnJbdGhpcy5lbXB0eVhdW3RoaXMuZW1wdHlZXSA9IHRoaXMuYXJyW3RoaXMuZW1wdHlYXVt0aGlzLmVtcHR5WSArIDFdO1xyXG4gICAgICAgICAgdGhpcy5hcnJbdGhpcy5lbXB0eVhdW3RoaXMuZW1wdHlZICsgMV0gPSAwO1xyXG4gICAgICAgICAgdGhpcy5lbXB0eVkgKz0gMTtcclxuICAgICAgICAgIHRoaXMuaGlzdG9yeS5wdXNoKFsgdGhpcy5lbXB0eVgsIHRoaXMuZW1wdHlZIF0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmNvdW50ZXIgLT0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2xlZnQnOlxyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgIHRoaXMuZW1wdHlZICE9PSAwICYmXHJcbiAgICAgICAgICAodGhpcy5oaXN0b3J5Lmxlbmd0aCA8PSAxIHx8IHRoaXMuZW1wdHlZIC0gMSAhPT0gdGhpcy5oaXN0b3J5W3RoaXMuaGlzdG9yeS5sZW5ndGggLSAyXVsxXSlcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuYXJyW3RoaXMuZW1wdHlYXVt0aGlzLmVtcHR5WV0gPSB0aGlzLmFyclt0aGlzLmVtcHR5WF1bdGhpcy5lbXB0eVkgLSAxXTtcclxuICAgICAgICAgIHRoaXMuYXJyW3RoaXMuZW1wdHlYXVt0aGlzLmVtcHR5WSAtIDFdID0gMDtcclxuICAgICAgICAgIHRoaXMuZW1wdHlZIC09IDE7XHJcbiAgICAgICAgICB0aGlzLmhpc3RvcnkucHVzaChbIHRoaXMuZW1wdHlYLCB0aGlzLmVtcHR5WSBdKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5jb3VudGVyIC09IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignPjooJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjcmVhdGVCb2FyZCgpIHtcclxuICAgIGNvbnN0IGFyciA9IFtdO1xyXG5cclxuICAgIHRoaXMuYmdQb3NBcnIgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zaXplOyBpICs9IDEpIHtcclxuICAgICAgYXJyW2ldID0gW107XHJcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5zaXplOyBqICs9IDEpIHtcclxuICAgICAgICBpZiAoaSArIGogIT09ICh0aGlzLnNpemUgLSAxKSAqIDIpIHtcclxuICAgICAgICAgIGFycltpXVtqXSA9IGkgKiB0aGlzLnNpemUgKyBqICsgMTtcclxuICAgICAgICAgIHRoaXMuYmdQb3NBcnIucHVzaChcclxuICAgICAgICAgICAgYCR7TWF0aC5yb3VuZCgxMDAgLyAodGhpcy5zaXplIC0gMSkgKiBqKX0lICR7TWF0aC5yb3VuZCgxMDAgLyAodGhpcy5zaXplIC0gMSkgKiBpKX0lYFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXJyW2ldW2pdID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBhcnI7XHJcbiAgfVxyXG5cclxuICBzaHVmZmxlKCkge1xyXG4gICAgdGhpcy5oaXN0b3J5LnB1c2goWyB0aGlzLmVtcHR5WCwgdGhpcy5lbXB0eVkgXSk7XHJcbiAgICBmb3IgKHRoaXMuY291bnRlciA9IDA7IHRoaXMuY291bnRlciA8IHRoaXMuc2l6ZSAqKiAzOyB0aGlzLmNvdW50ZXIgKz0gMSkge1xyXG4gICAgICBzd2l0Y2ggKE1hdGguZmxvb3IoNCAqIE1hdGgucmFuZG9tKCkpKSB7XHJcbiAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgLy8gIE1PVkUgVVBcclxuXHJcbiAgICAgICAgICB0aGlzLm1vdmUoJ3VwJyk7XHJcblxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgLy8gIE1PVkUgUklHSFRcclxuICAgICAgICAgIHRoaXMubW92ZSgncmlnaHQnKTtcclxuXHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAvLyAgTU9WRSBET1dOXHJcbiAgICAgICAgICB0aGlzLm1vdmUoJ2Rvd24nKTtcclxuXHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDM6XHJcbiAgICAgICAgICAvLyAgTU9WRSBMRUZUXHJcbiAgICAgICAgICB0aGlzLm1vdmUoJ2xlZnQnKTtcclxuXHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCc+OignKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyQm9hcmQoKSB7XHJcbiAgICBsZXQgYm9hcmQgPSBgPGRpdiBjbGFzcz1cInNjb3JlLWxpc3RcIj50ZXN0PC9kaXY+YDtcclxuICAgIGNvbnN0IGJvYXJkV2lkdGggPSBgJHt0aGlzLmJvYXJkV2lkdGh9cmVtYDtcclxuICAgIGxldCBjZWxsTnVtYmVyO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwLCBvcmRlciA9IDE7IGkgPCB0aGlzLnNpemU7IGkgKz0gMSkge1xyXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuc2l6ZTsgaiArPSAxKSB7XHJcbiAgICAgICAgY2VsbE51bWJlciA9IHRoaXMuYXJyW2ldW2pdO1xyXG5cclxuICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBjZWxsTnVtYmVyID8gJ2NlbGwnIDogJ2NlbGwgZW1wdHknO1xyXG5cclxuICAgICAgICBjb25zdCBkcmFnZ2FibGUgPSAhIWNlbGxOdW1iZXI7XHJcblxyXG4gICAgICAgIGNvbnN0IHByZXZlbnREZWYgPSAhY2VsbE51bWJlciA/IFwib25kcmFnb3ZlciA9ICdldmVudC5wcmV2ZW50RGVmYXVsdCgpJ1wiIDogJyc7XHJcbiAgICAgICAgY29uc3QgYkdwb3MgPSB0aGlzLmJnUG9zQXJyW2NlbGxOdW1iZXIgLSAxXTtcclxuICAgICAgICBjb25zdCBiZ0ZvckNlbGwgPSBjZWxsTnVtYmVyXHJcbiAgICAgICAgICA/IGBiYWNrZ3JvdW5kOiB1cmwoLi4vYXNzZXRzL2ltYWdlcy8ke3RoaXNcclxuICAgICAgICAgICAgICAuaW1nTnVtYn0uanBnKTsgYmFja2dyb3VuZC1wb3NpdGlvbjogJHtiR3Bvc307IGJhY2tncm91bmQtc2l6ZTogJHtib2FyZFdpZHRofTtgXHJcbiAgICAgICAgICA6ICcnO1xyXG4gICAgICAgIG9yZGVyICs9IDE7XHJcblxyXG4gICAgICAgIGJvYXJkICs9IGA8ZGl2IFxyXG4gICAgICAgICR7cHJldmVudERlZn1cclxuICAgICAgICAgIHN0eWxlPSd3aWR0aDoke3RoaXMuY2VsbFNpemV9cmVtO1xyXG4gICAgICAgICAgaGVpZ2h0OiR7dGhpcy5jZWxsU2l6ZX1yZW07XHJcbiAgICAgICAgICBvcmRlcjoke29yZGVyfTtcclxuICAgICAgICAgICR7YmdGb3JDZWxsfSdcclxuICAgICAgICAgIGlkPSdjZWxsLSR7Y2VsbE51bWJlcn0nXHJcbiAgICAgICAgICBjbGFzcz0nJHtjbGFzc05hbWV9J1xyXG4gICAgICAgICAgZHJhZ2dhYmxlPVwiJHtkcmFnZ2FibGV9XCI+JHtjZWxsTnVtYmVyfTwvZGl2PmA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2JvYXJkJyk7XHJcbiAgICBlbGVtZW50LnN0eWxlLndpZHRoID0gYm9hcmRXaWR0aDtcclxuICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gYm9hcmQ7XHJcblxyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTtcclxuICB9XHJcblxyXG4gIGRyYXcoKSB7XHJcbiAgICBjb25zdCByZW1QZXJUaWNrID0gdGhpcy5jZWxsU2l6ZSAvIHRoaXMuYW5pbWF0aW9uVGltZSAqIHRoaXMudGltZVBhc3NlZDtcclxuICAgIHN3aXRjaCAodGhpcy5kaXJlY3Rpb24pIHtcclxuICAgICAgY2FzZSAndXAnOlxyXG4gICAgICAgIHRoaXMuZS5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCAwLCAkey1yZW1QZXJUaWNrfXJlbSlgO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdkb3duJzpcclxuICAgICAgICB0aGlzLmUuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSggMCwgJHtyZW1QZXJUaWNrfXJlbSlgO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdsZWZ0JzpcclxuICAgICAgICB0aGlzLmUuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSggJHstcmVtUGVyVGlja31yZW0sIDApYDtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAncmlnaHQnOlxyXG4gICAgICAgIHRoaXMuZS5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCAke3JlbVBlclRpY2t9cmVtLCAwKWA7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCc+OignKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG1vdmVBbmltYXRpb24oWyB4LCB5IF0pIHtcclxuICAgIGlmICh0aGlzLmVtcHR5WCA8IHgpIHtcclxuICAgICAgdGhpcy5kaXJlY3Rpb24gPSAndXAnO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLmVtcHR5WCA+IHgpIHtcclxuICAgICAgdGhpcy5kaXJlY3Rpb24gPSAnZG93bic7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuZW1wdHlZIDwgeSkge1xyXG4gICAgICB0aGlzLmRpcmVjdGlvbiA9ICdsZWZ0JztcclxuICAgIH0gZWxzZSBpZiAodGhpcy5lbXB0eVkgPiB5KSB7XHJcbiAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ3JpZ2h0JztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmluQW5pbWF0aW9uID0gdHJ1ZTtcclxuICAgIHRoaXMuc3RhcnQgPSBEYXRlLm5vdygpO1xyXG5cclxuICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIHRoaXMudGltZVBhc3NlZCA9IERhdGUubm93KCkgLSB0aGlzLnN0YXJ0O1xyXG5cclxuICAgICAgaWYgKHRoaXMudGltZVBhc3NlZCA+PSB0aGlzLmFuaW1hdGlvblRpbWUpIHtcclxuICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xyXG4gICAgICAgIHRoaXMuaW5BbmltYXRpb24gPSBmYWxzZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuZHJhdygpO1xyXG4gICAgfSwgMjApO1xyXG4gIH1cclxuXHJcbiAgdG9nZ2xlU291bmQoKSB7XHJcbiAgICB0aGlzLnNvdW5kT24gPSAhdGhpcy5zb3VuZE9uO1xyXG4gIH1cclxuXHJcbiAgc3dhcChudW1iZXIpIHtcclxuICAgIGlmICh0aGlzLmluQW5pbWF0aW9uKSByZXR1cm47XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmFyci5sZW5ndGg7IGkgKz0gMSkge1xyXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuYXJyW2ldLmxlbmd0aDsgaiArPSAxKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYXJyW2ldW2pdID09PSBudW1iZXIpIHtcclxuICAgICAgICAgIGlmICh0aGlzLmlzTmVhclplcm8oaSwgaikpIHtcclxuICAgICAgICAgICAgLy8gTW92ZSBjb3VudGVyXHJcbiAgICAgICAgICAgIHRoaXMubW92ZXNDb3VudGVyICs9IDE7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb3ZlJykuaW5uZXJIVE1MID0gdGhpcy5tb3Zlc0NvdW50ZXI7XHJcblxyXG4gICAgICAgICAgICBjb25zdCB6ZXJvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2NlbGwtJHt0aGlzLmFyclt0aGlzLmVtcHR5WF1bdGhpcy5lbXB0eVldfWApO1xyXG4gICAgICAgICAgICB0aGlzLmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjY2VsbC0ke3RoaXMuYXJyW2ldW2pdfWApO1xyXG5cclxuICAgICAgICAgICAgLy8gIGZpbmQgd2hlcmUgYXJlIHdlIG1vdmluZ1xyXG4gICAgICAgICAgICB0aGlzLm1vdmVBbmltYXRpb24oWyBpLCBqIF0pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5wbGF5U2xpZGVTb3VuZCgpO1xyXG5cclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc3QgdGVtcCA9IHplcm8uc3R5bGUub3JkZXI7XHJcbiAgICAgICAgICAgICAgemVyby5zdHlsZS5vcmRlciA9IHRoaXMuZS5zdHlsZS5vcmRlcjtcclxuICAgICAgICAgICAgICB0aGlzLmUuc3R5bGUub3JkZXIgPSB0ZW1wO1xyXG5cclxuICAgICAgICAgICAgICB0aGlzLmUuc3R5bGUudHJhbnNmb3JtID0gJyc7XHJcblxyXG4gICAgICAgICAgICAgIGlmICh0aGlzLmVtcHR5WCA9PT0gdGhpcy5lbXB0eVkgJiYgdGhpcy5lbXB0eVkgPT09IHRoaXMuc2l6ZSAtIDEpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrV2luKCkpIHtcclxuICAgICAgICAgICAgICAgICAgdGhpcy50aW1lckMudGltZXJQYXVzZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgdGhpcy5hbmltYXRpb25UaW1lKTtcclxuICAgICAgICAgICAgWyB0aGlzLmFycltpXVtqXSwgdGhpcy5hcnJbdGhpcy5lbXB0eVhdW3RoaXMuZW1wdHlZXSBdID0gW1xyXG4gICAgICAgICAgICAgIHRoaXMuYXJyW3RoaXMuZW1wdHlYXVt0aGlzLmVtcHR5WV0sXHJcbiAgICAgICAgICAgICAgdGhpcy5hcnJbaV1bal1cclxuICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgdGhpcy5lbXB0eVggPSBpO1xyXG4gICAgICAgICAgICB0aGlzLmVtcHR5WSA9IGo7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmhpc3RvcnkucHVzaChbIHRoaXMuZW1wdHlYLCB0aGlzLmVtcHR5WSBdKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0U2NvcmUoKSB7XHJcbiAgICBsZXQgc2NvcmVMaXN0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2NvcmUtbGlzdCcpKSB8fCBbXTtcclxuICAgIHNjb3JlTGlzdC5wdXNoKHsgbW92ZXM6IHRoaXMubW92ZXNDb3VudGVyLCBzaXplOiB0aGlzLnNpemUsIHRpbWU6IHRoaXMudGltZXJDLnRpbWVyIH0pO1xyXG4gICAgaWYgKHNjb3JlTGlzdC5sZW5ndGggPiAxMCkge1xyXG4gICAgICBzY29yZUxpc3Quc29ydCgoYSwgYikgPT4ge1xyXG4gICAgICAgIHJldHVybiBhLm1vdmVzIC0gYi5tb3ZlcztcclxuICAgICAgfSk7XHJcbiAgICAgIHNjb3JlTGlzdCA9IHNjb3JlTGlzdC5zbGljZSgwLCAxMCk7XHJcbiAgICB9XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2NvcmUtbGlzdCcsIEpTT04uc3RyaW5naWZ5KHNjb3JlTGlzdCkpO1xyXG4gIH1cclxuXHJcbiAgZ2V0U2NvcmVMaXN0KCkge1xyXG4gICAgdGhpcy5zY29yZUxpc3QgPSAhdGhpcy5zY29yZUxpc3Q7XHJcblxyXG4gICAgY29uc3Qgc2NvcmVFbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNjb3JlLWxpc3QnKTtcclxuICAgIGNvbnN0IHNjb3JlTGlzdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Njb3JlLWxpc3QnKSkgfHwgW107XHJcbiAgICBsZXQgbGlzdCA9ICcnO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSBzY29yZUxpc3QubGVuZ3RoIC0gMTsgaSA+PSAwOyBpIC09IDEpIHtcclxuICAgICAgbGlzdCArPSBgPGxpPlNpemU6ICR7c2NvcmVMaXN0W2ldLnNpemV9LCZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO01vdmVzOiAke3Njb3JlTGlzdFtpXVxyXG4gICAgICAgIC5tb3Zlc30sJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7VGltZTogJHtzY29yZUxpc3RbaV0udGltZX08L2xpPmA7XHJcbiAgICB9XHJcbiAgICBzY29yZUVsZW0uaW5uZXJIVE1MID0gYDxoMj5CZXN0IFNjb3JlczwvaDI+XHJcbiAgICAgIDxvbCBjbGFzcz1cInNjb3JlXCI+JHtsaXN0fTwvb2w+YDtcclxuICAgIGlmICh0aGlzLnNjb3JlTGlzdCkge1xyXG4gICAgICBzY29yZUVsZW0uY2xhc3NMaXN0LmFkZCgnc2NvcmUtbGlzdC1vbicpO1xyXG4gICAgICB0aGlzLnRpbWVyQy50aW1lclBhdXNlKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzY29yZUVsZW0uY2xhc3NMaXN0LnJlbW92ZSgnc2NvcmUtbGlzdC1vbicpO1xyXG4gICAgICB0aGlzLnRpbWVyQy5jYWxjQ3VycmVudFRpbWUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNoZWNrV2luKGNoZWF0KSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2l6ZTsgaSArPSAxKSB7XHJcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5zaXplOyBqICs9IDEpIHtcclxuICAgICAgICBpZiAoaSArIGogIT09ICh0aGlzLnNpemUgLSAxKSAqIDIpIHtcclxuICAgICAgICAgIGlmICh0aGlzLndpbltpXVtqXSAhPT0gdGhpcy5hcnJbaV1bal0pIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMucGxheVdpblNvdW5kKCk7XHJcbiAgICB0aGlzLnNldFdpbk1lc3NhZ2UoY2hlYXQpO1xyXG4gICAgdGhpcy5zZXRTY29yZSgpO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICBzZXRXaW5NZXNzYWdlKGNoZWF0KSB7XHJcbiAgICB0aGlzLndpbkJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJvYXJkJyk7XHJcbiAgICB0aGlzLndpbkJvYXJkLmNsYXNzTGlzdC5hZGQoJ3dpbicpO1xyXG5cclxuICAgIHRoaXMud2luQm9hcmQuaW5uZXJIVE1MICs9IGA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2Fzc2V0cy9pbWFnZXMvJHt0aGlzXHJcbiAgICAgIC5pbWdOdW1ifS5qcGcpO1wiIGNsYXNzPSd3aW4tdGV4dCc+JHtjaGVhdFxyXG4gICAgICA/ICfQp9CY0KLQldCgISdcclxuICAgICAgOiBg0KPRgNCwISDQktGLINGA0LXRiNC40LvQuCDQs9C+0LvQvtCy0L7Qu9C+0LzQutGDINC30LAgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGltZScpXHJcbiAgICAgICAgICAuaW5uZXJIVE1MfSDQuCAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb3ZlJykuaW5uZXJIVE1MfSDRhdC+0LTQvtCyPC9kaXY+YH08L2Rpdj5gO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHRoaXMud2luQm9hcmQucXVlcnlTZWxlY3RvcignLndpbi10ZXh0Jykuc3R5bGUub3BhY2l0eSA9IDE7XHJcbiAgICB9LCA1MCk7XHJcbiAgfVxyXG5cclxuICBwbGF5V2luU291bmQoKSB7XHJcbiAgICBpZiAoIXRoaXMuc291bmRPbikgcmV0dXJuO1xyXG4gICAgdGhpcy53aW5Tb3VuZC5jdXJyZW50VGltZSA9IDA7XHJcbiAgICB0aGlzLndpblNvdW5kLnBsYXkoKTtcclxuICB9XHJcblxyXG4gIHBsYXlTbGlkZVNvdW5kKCkge1xyXG4gICAgaWYgKCF0aGlzLnNvdW5kT24pIHJldHVybjtcclxuICAgIHRoaXMuc2xpZGVTb3VuZC5jdXJyZW50VGltZSA9IDA7XHJcbiAgICB0aGlzLnNsaWRlU291bmQucGxheSgpO1xyXG4gIH1cclxuXHJcbiAgZHJhZ1N0YXJ0KCkge1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xyXG4gICAgfSwgMCk7XHJcbiAgfVxyXG5cclxuICBkcmFnRW5kKCkge1xyXG4gICAgdGhpcy5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJyk7XHJcbiAgfVxyXG5cclxuICBkcmFnRW50ZXIoKSB7XHJcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2hvdmVyZWQnKTtcclxuICB9XHJcblxyXG4gIGRyYWdMZWF2ZSgpIHtcclxuICAgIHRoaXMuY2xhc3NMaXN0LnJlbW92ZSgnaG92ZXJlZCcpO1xyXG4gIH1cclxuXHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMuc2NvcmVMaXN0ID0gZmFsc2U7XHJcbiAgICB0aGlzLnJhbmRvbUltZ051bWJlcigxNTAsIDEpO1xyXG4gICAgdGhpcy5oaXN0b3J5ID0gW107XHJcbiAgICB0aGlzLm1vdmVzQ291bnRlciA9IDA7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW92ZScpLmlubmVySFRNTCA9IHRoaXMubW92ZXNDb3VudGVyO1xyXG4gICAgdGhpcy5zaXplID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZpZWxkU2l6ZScpLnZhbHVlO1xyXG5cclxuICAgIHRoaXMuY2VsbFNpemUgPSBwYXJzZUZsb2F0KHRoaXMuYm9hcmRXaWR0aCAvIHRoaXMuc2l6ZSAtIDIgKiB0aGlzLm1hcmdpblNpemUpLnRvRml4ZWQoMyk7XHJcblxyXG4gICAgdGhpcy5yZW1vdmVCb2FyZCgpO1xyXG5cclxuICAgIHRoaXMuZW1wdHlYID0gdGhpcy5zaXplIC0gMTtcclxuICAgIHRoaXMuZW1wdHlZID0gdGhpcy5zaXplIC0gMTtcclxuXHJcbiAgICB0aGlzLmFyciA9IHRoaXMuY3JlYXRlQm9hcmQoKTtcclxuICAgIHRoaXMud2luID0gdGhpcy5jcmVhdGVCb2FyZCgpO1xyXG5cclxuICAgIHRoaXMuc2h1ZmZsZSgpO1xyXG5cclxuICAgIHRoaXMucmVuZGVyQm9hcmQoKTtcclxuICAgIHRoaXMudGltZXJDLmluaXQoKTtcclxuXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2VsbCcpLmZvckVhY2goKGNlbGwpID0+IHtcclxuICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgKGV2dCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGVsZW0gPSBldnQudGFyZ2V0O1xyXG4gICAgICAgIHRoaXMuc3dhcChwYXJzZUludChlbGVtLmlubmVySFRNTCwgMTApKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjZWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuZHJhZ1N0YXJ0KTtcclxuXHJcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ292ZXInLCB0aGlzLmRyYWdPdmVyKTtcclxuXHJcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIHRoaXMuZHJhZ0Ryb3ApO1xyXG5cclxuICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdkcmFnZW5kJywgdGhpcy5kcmFnRW5kKTtcclxuXHJcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2VudGVyJywgdGhpcy5kcmFnRW50ZXIpO1xyXG5cclxuICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdkcmFnbGVhdmUnLCB0aGlzLmRyYWdMZWF2ZSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGxvYWQoKSB7XHJcbiAgICB0aGlzLmNlbGxTaXplID0gcGFyc2VGbG9hdCh0aGlzLmJvYXJkV2lkdGggLyB0aGlzLnNpemUgLSAyICogdGhpcy5tYXJnaW5TaXplKS50b0ZpeGVkKDMpO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vdmUnKS5pbm5lckhUTUwgPSB0aGlzLm1vdmVzQ291bnRlcjtcclxuICAgIHRoaXMucmVtb3ZlQm9hcmQoKTtcclxuICAgIHRoaXMucmVuZGVyQm9hcmQoKTtcclxuICAgIHRoaXMud2luID0gdGhpcy5jcmVhdGVCb2FyZCgpO1xyXG4gICAgdGhpcy50aW1lckMuaW5pdCgpO1xyXG5cclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jZWxsJykuZm9yRWFjaCgoY2VsbCkgPT4ge1xyXG4gICAgICBjZWxsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgY29uc3QgZWxlbSA9IGV2dC50YXJnZXQ7XHJcbiAgICAgICAgdGhpcy5zd2FwKHBhcnNlSW50KGVsZW0uaW5uZXJIVE1MLCAxMCkpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgdGhpcy5kcmFnU3RhcnQpO1xyXG5cclxuICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIHRoaXMuZHJhZ092ZXIpO1xyXG5cclxuICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgdGhpcy5kcmFnRHJvcCk7XHJcblxyXG4gICAgICBjZWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdlbmQnLCB0aGlzLmRyYWdFbmQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=