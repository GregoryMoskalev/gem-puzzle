(()=>{"use strict";const t=new class{constructor(){this.history=[],this.size=4,this.emptyX=this.size-1,this.emptyY=this.size-1,this.arr=[]}move(t){switch(t){case"up":this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX-1][this.emptyY],this.arr[this.emptyX-1][this.emptyY]=0,this.emptyX-=1;break;case"down":this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX+1][this.emptyY],this.arr[this.emptyX+1][this.emptyY]=0,this.emptyX+=1;break;case"right":this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX][this.emptyY+1],this.arr[this.emptyX][this.emptyY+1]=0,this.emptyY+=1;break;case"left":this.arr[this.emptyX][this.emptyY]=this.arr[this.emptyX][this.emptyY-1],this.arr[this.emptyX][this.emptyY-1]=0,this.emptyY-=1;break;default:throw new Error(">:(")}}shuffle(){this.history.push([this.emptyX,this.emptyY]);for(let t=0;t<80;t+=1)switch(Math.floor(4*Math.random())){case 0:0!==this.emptyX?this.move("up"):this.move("down"),this.history.push([this.emptyX,this.emptyY]);break;case 1:this.emptyY!==this.size-1?this.move("right"):this.move("left"),this.history.push([this.emptyX,this.emptyY]);break;case 2:this.emptyX!==this.size-1?this.move("down"):this.move("up"),this.history.push([this.emptyX,this.emptyY]);break;case 3:0!==this.emptyY?this.move("left"):(this.move("right"),this.history.push([this.emptyX,this.emptyY]));break;default:throw t-=1,new Error(">:(")}return this.arr}renderBoard(){let t,s="";for(let e=0,i=1;e<this.size;e+=1)for(let h=0;h<this.size;h+=1){t=this.arr[e][h];const r=this.arr[e][h]?"cell":"empty";i+=1,s+=`<div style='order:${i};' id='cell-${t}' class='${r}'>${t}</div>`}return s}createBoard(){for(let t=0;t<this.size;t+=1){this.arr[t]=[];for(let s=0;s<this.size;s+=1)t+s!==2*(this.size-1)?this.arr[t][s]=t*this.size+s+1:this.arr[t][s]=0}return this.arr=this.shuffle(),console.table(this.arr),this.renderBoard()}swap(t){for(let s=0;s<this.arr.length;s+=1)for(let e=0;e<this.arr[s].length;e+=1)if(this.arr[s][e]===t&&(Math.abs(this.emptyX-s)<=1&&this.emptyY-e==0||Math.abs(this.emptyY-e)<=1&&this.emptyX-s==0)){const t=document.querySelector("#cell-"+this.arr[this.emptyX][this.emptyY]),i=document.querySelector("#cell-"+this.arr[s][e]),h=t.style.order;return t.style.order=i.style.order,i.style.order=h,[this.arr[s][e],this.arr[this.emptyX][this.emptyY]]=[this.arr[this.emptyX][this.emptyY],this.arr[s][e]],this.emptyX=s,this.emptyY=e,void console.table(this.arr)}}},s=document.createElement("div");s.classList.add("board"),s.innerHTML=t.createBoard(),document.body.appendChild(s),document.querySelectorAll(".cell").forEach((s=>{s.addEventListener("mousedown",(s=>{const e=s.target;t.swap(parseInt(e.innerHTML,10))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,